<!-- @AspectJ v1.5.0 Tests -->

    <ajc-test dir="java5/ataspectj" title="SimpleBefore">
        <compile files="SimpleBefore.java" options="-1.5 -showWeaveInfo -XnoInline">
            <message kind="weave" text="(SimpleBefore.java:23) advised by before advice from 'SimpleBefore$X' (SimpleBefore.java:1)"/>
        </compile>
        <run class="SimpleBefore"/>
        <compile files="SimpleBefore.java" options="-1.5 -showWeaveInfo -XnoInline -Xdev:NoAtAspectJProcessing">
            <message kind="weave" text="(SimpleBefore.java:23) advised by before advice from 'SimpleBefore$X' (SimpleBefore.java:1)"/>
        </compile>
        <run class="SimpleBefore"/>
    </ajc-test>
    
     <ajc-test dir="java5/ataspectj" title="SimpleAfter">
        <compile files="SimpleAfter.java" options="-1.5 -showWeaveInfo -XnoInline">
          <message kind="weave" text="(SimpleAfter.java:13) advised by after advice from 'SimpleAfter$X'"/>
        </compile>
        <run class="SimpleAfter"/>
        <compile files="SimpleAfter.java" options="-1.5 -showWeaveInfo -XnoInline -Xdev:NoAtAspectJProcessing">
          <message kind="weave" text="(SimpleAfter.java:13) advised by after advice from 'SimpleAfter$X'"/>
        </compile>
        <run class="SimpleAfter"/>
    </ajc-test>
    
    <ajc-test dir="java5/ataspectj" title="singletonAspectBindings">
        <compile files="ataspectj/SingletonAspectBindingsTest.java,ataspectj/TestHelper.java" options="-1.5 -XnoInline"/>
        <run class="ataspectj.SingletonAspectBindingsTest"/>
        <compile files="ataspectj/SingletonAspectBindingsTest.java,ataspectj/TestHelper.java" options="-1.5 -XnoInline -Xdev:NoAtAspectJProcessing"/>
        <run class="ataspectj.SingletonAspectBindingsTest"/>
      </ajc-test>
    
    <ajc-test dir="java5/ataspectj" title="CflowTest">
        <compile files="ataspectj/CflowTest.java,ataspectj/TestHelper.java" options="-1.5"/>
        <run class="ataspectj.CflowTest"/>
        <compile files="ataspectj/CflowTest.java,ataspectj/TestHelper.java" options="-1.5 -Xdev:NoAtAspectJProcessing"/>
        <run class="ataspectj.CflowTest"/>
    </ajc-test>
    
    <ajc-test dir="java5/ataspectj" title="PointcutReferenceTest">
        <compile files="ataspectj/PointcutReferenceTest.java,ataspectj/TestHelper.java" options="-1.5"/>
        <run class="ataspectj.PointcutReferenceTest"/>
        <compile files="ataspectj/PointcutReferenceTest.java,ataspectj/TestHelper.java" options="-1.5 -Xdev:NoAtAspectJProcessing"/>
        <run class="ataspectj.PointcutReferenceTest"/>
    </ajc-test>
    
    <ajc-test dir="java5/ataspectj" title="XXJoinPointTest">
        <compile files="ataspectj/XXJoinPointTest.java,ataspectj/TestHelper.java" options="-1.5"/>
        <run class="ataspectj.XXJoinPointTest"/>
        <compile files="ataspectj/XXJoinPointTest.java,ataspectj/TestHelper.java" options="-1.5 -Xdev:NoAtAspectJProcessing"/>
        <run class="ataspectj.XXJoinPointTest"/>
    </ajc-test>
    
    <ajc-test dir="java5/ataspectj" title="PrecedenceTest">
        <compile files="ataspectj/PrecedenceTest.java,ataspectj/TestHelper.java" options="-1.5"/>
        <run class="ataspectj.PrecedenceTest"/>
        <compile files="ataspectj/PrecedenceTest.java,ataspectj/TestHelper.java" options="-1.5 -Xdev:NoAtAspectJProcessing"/>
        <run class="ataspectj.PrecedenceTest"/>
    </ajc-test>
    
    <ajc-test dir="java5/ataspectj" title="AfterXTest">
        <compile files="ataspectj/AfterXTest.java,ataspectj/TestHelper.java" options="-1.5"/>
        <run class="ataspectj.AfterXTest"/>
    </ajc-test>
    
    <ajc-test dir="java5/ataspectj" title="IfPointcutTest">
        <compile files="ataspectj/IfPointcutTest.java,ataspectj/TestHelper.java" options="-1.5"/>
        <run class="ataspectj.IfPointcutTest"/>
    </ajc-test>
    
    <ajc-test dir="java5/ataspectj" title="BindingTest">
        <compile files="ataspectj/BindingTest.java,ataspectj/TestHelper.java" options="-1.5"/>
        <run class="ataspectj.BindingTest"/>
    </ajc-test>
    
    <!-- ================================================================= -->
    <!-- Adrian's tests for generation of @AspectJ annotations from ajc                                   -->
    <!-- ================================================================= -->
    
    <ajc-test dir="java5/ataspectj/annotationGen" title="annotation gen for simple aspect">
        <compile files="SimpleAspect.aj" options="-1.5"/>
        <run class="SimpleAspect"/>
    </ajc-test>
    
    <ajc-test dir="java5/ataspectj/annotationGen" title="annotation gen for simple annotated aspect">
        <compile files="SimpleAnnotatedAspect.aj" options="-1.5"/>
        <run class="SimpleAnnotatedAspect"/>
    </ajc-test>
    
    <ajc-test dir="java5/ataspectj/annotationGen" title="annotation gen for simple aspect pre 1.5">
        <compile files="Simple14Aspect.aj" options="-1.4"/>
        <compile files="Simple14AspectTest.java" options="-1.5"/>
        <run class="Simple14AspectTest"/>
    </ajc-test>

    <ajc-test dir="java5/ataspectj/annotationGen" title="annotation gen for privileged aspect">
        <compile files="PrivilegedAspect.aj" options="-1.5"/>
        <run class="PrivilegedAspect"/>
    </ajc-test>
    
    <ajc-test dir="java5/ataspectj/annotationGen" title="annotation gen for perthis aspect">
        <compile files="PerThisAspect.aj" options="-1.5"/>
        <run class="PerThisAspect"/>
    </ajc-test>

    <ajc-test dir="java5/ataspectj/annotationGen" title="annotation gen for pertarget aspect">
        <compile files="PerTargetAspect.aj" options="-1.5"/>
        <run class="PerTargetAspect"/>
    </ajc-test>
    
    <ajc-test dir="java5/ataspectj/annotationGen" title="annotation gen for percflow aspect">
        <compile files="PerCflowAspect.aj" options="-1.5"/>
        <run class="PerCflowAspect"/>
    </ajc-test>
    
    <ajc-test dir="java5/ataspectj/annotationGen" title="annotation gen for percflowbelow aspect">
        <compile files="PerCflowbelowAspect.aj" options="-1.5"/>
        <run class="PerCflowbelowAspect"/>
    </ajc-test>

    <ajc-test dir="java5/ataspectj/annotationGen" title="annotation gen for pertypewithin aspect">
        <compile files="PerTypeWithinAspect.aj" options="-1.5"/>
        <run class="PerTypeWithinAspect"/>
    </ajc-test>

    <ajc-test dir="java5/ataspectj/annotationGen" title="annotation gen for inner aspect of aspect">
        <compile files="InnerAspectAspect.aj" options="-1.5"/>
        <run class="InnerAspectAspect"/>
    </ajc-test>
            
    <ajc-test dir="java5/ataspectj/annotationGen" title="annotation gen for inner aspect of class">
        <compile files="InnerAspectClass.aj" options="-1.5"/>
        <run class="InnerAspectClass"/>
    </ajc-test>  
    
    <ajc-test dir="java5/ataspectj/annotationGen" title="annotation gen for advice declarations">
        <compile files="BasicAdvice.aj" options="-1.5"/>
        <run class="BasicAdvice"/>
    </ajc-test>  

    <ajc-test dir="java5/ataspectj/annotationGen" title="annotation gen for simple pointcut">
        <compile files="SimplePointcut.aj" options="-1.5"/>
        <run class="SimplePointcut"/>
    </ajc-test>  

    <ajc-test dir="java5/ataspectj/annotationGen" title="annotation gen for pointcut modifiers">
        <compile files="PointcutModifiers.aj" options="-1.5"/>
        <run class="PointcutModifiers"/>
    </ajc-test>                
    
    <ajc-test dir="java5/ataspectj/annotationGen" title="annotation gen for pointcut params">
        <compile files="PointcutsWithParams.aj" options="-1.5"/>
        <run class="PointcutsWithParams"/>
    </ajc-test>                

    <ajc-test dir="java5/ataspectj/annotationGen" title="annotation gen for pointcut refs">
        <compile files="ReferencePointcuts.aj" options="-1.5"/>
        <run class="ReferencePointcuts"/>
    </ajc-test>                

    <ajc-test dir="java5/ataspectj/annotationGen" title="before ann with non-void return">
        <compile files="BeforeWithBadReturn.java" options="-1.5">
            <message kind="error" line="7" text="This advice must return void"/>
            <message kind="error" line="7" text="This method must return a result of type String"/>            
        </compile>
    </ajc-test>                

     <ajc-test dir="java5/ataspectj/annotationGen" title="two anns on same element">
        <compile files="TwoForThePriceOfOne.java" options="-1.5">
            <message kind="error" line="7" text="The annotation @Pointcut is disallowed for this location"/>
        </compile>
    </ajc-test>
    
    <ajc-test dir="java5/ataspectj/annotationGen" title="bad pcut in after advice">
        <compile files="AfterReturningWithBadPCut.java" options="-1.5">
            <message kind="error" line="6" text="Syntax error on token &quot;excution(* *.*(..))&quot;"/>
        </compile>
    </ajc-test>          
    
    <ajc-test dir="java5/ataspectj/annotationGen" title="bad parameter binding in advice">
        <compile files="BadParameterBinding.java" options="-1.5">
            <message kind="warning" line="11" text="no match for this type name: bpb"/>
            <message kind="warning" line="15" text="no match for this type name: TheUnknownType"/>
        </compile>
    </ajc-test>          
    
    <ajc-test dir="java5/ataspectj/annotationGen" title="simple pointcut no params">
        <compile files="APointcut.java" options="-1.5"/>
        <run class="APointcut"/>
    </ajc-test>                

    <ajc-test dir="java5/ataspectj/annotationGen" title="pointcut medley">
        <compile files="PointcutAssortment.java" options="-1.5">
            <message kind="error" line="9" text="Methods annotated with @Pointcut must return void"/>
            <message kind="error" line="9" text="This method must return a result of type String"/>
            <message kind="error" line="15" text="Pointcuts should have an empty method body"/>
            <message kind="error" line="28" text="Duplicate annotation @Pointcut"/>
            <message kind="error" line="29" text="Duplicate annotation @Pointcut"/>
            <message kind="error" line="11" text="can't find referenced pointcut foo"/>
            <message kind="warning" line="32" text="no match for this type name: foo [Xlint:invalidAbsoluteTypeName]"/>
         </compile>
    </ajc-test>                

    <ajc-test dir="java5/ataspectj/annotationGen" title="advice in a class">
        <compile files="AdviceInAClass.java" options="-1.5">
            <message kind="error" line="6" text="Advice must be declared inside an aspect type"/>
        </compile>
    </ajc-test>          
    