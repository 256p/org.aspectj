<!DOCTYPE suite SYSTEM "../tests/ajcTestSuite.dtd"[]>

<suite>

	<ajc-test dir="bugs1810/259416" title="param anno binding">
		<compile options="-1.8 -showWeaveInfo" files="RGB.java ColouredAnnotation.java Test1.java">
		  <message kind="weave" text="Join point 'method-execution(void Test1.coloured(java.lang.String))' in Type 'Test1' (Test1.java:5) advised by before advice from 'X' (Test1.java:10)"/>
		</compile>
		<run class="Test1">
			<stdout>
				<line text="Annotation from parameter on method execution(void Test1.coloured(String)) is @ColouredAnnotation(value=RED)"/>
			</stdout>
		</run>
	</ajc-test>
	
	<ajc-test dir="bugs1810/259416" title="param anno binding 2">
		<compile options="-1.8 -showWeaveInfo" files="RGB.java ColouredAnnotation.java Test2.java">
		  <message kind="weave" text="Join point 'method-execution(void Test2.coloured(java.lang.String))' in Type 'Test2' (Test2.java:5) advised by before advice from 'X' (Test2.java:10)"/>
		</compile>
		<run class="Test2">
			<stdout>
				<line text="Annotation from parameter on method execution(void Test2.coloured(String)) is @ColouredAnnotation(value=GREEN)"/>
			</stdout>
		</run>
	</ajc-test>
	
	<ajc-test dir="bugs1810/259416" title="param anno binding 3">
		<compile options="-1.8 -showWeaveInfo" files="RGB.java ColouredAnnotation.java Test3.java">
		  <message kind="weave" text="Join point 'method-execution(void Test3.coloured(int, java.lang.String))' in Type 'Test3' (Test3.java:5) advised by before advice from 'X' (Test3.java:10)"/>
		</compile>
		<run class="Test3">
			<stdout>
				<line text="Annotation from parameter on method execution(void Test3.coloured(int, String)) is @ColouredAnnotation(value=RED)"/>
			</stdout>
		</run>
	</ajc-test>
	
	<ajc-test dir="bugs1810/259416" title="param anno binding 4">
		<compile options="-1.8 -showWeaveInfo" files="RGB.java ColouredAnnotation.java Test4.java Filler.java">
		  <message kind="weave" text="Join point 'method-execution(void Test4.coloured(int, java.lang.String))' in Type 'Test4' (Test4.java:5) advised by before advice from 'X' (Test4.java:10)"/>
		</compile>
		<run class="Test4">
			<stdout>
				<line text="Annotation from parameter on method execution(void Test4.coloured(int, String)) is @ColouredAnnotation(value=GREEN)"/>
			</stdout>
		</run>
	</ajc-test>
	

	<ajc-test dir="bugs1810/500035" title="ataspectj binding">
		<compile options="-1.8" files="Code.java"/>
		<run class="Code">
		<stdout>
		<line text="targetObject = hello"/>
		<line text="regex = l"/>
		<line text="replacement = 7"/>
		<line text="he7lo"/>
		</stdout>
		</run>
	</ajc-test>
	
	<ajc-test dir="bugs1810/500035" title="ataspectj binding 2">
		<compile options="-1.8" files="Code2.java"/>
		<run class="Code2">
		<stdout>
		<line text="targetObject = hello"/>
		<line text="regex = l"/>
		<line text="replacement = 8"/>
		<line text="he8lo"/>
		</stdout>
		</run>
	</ajc-test>
	
	<ajc-test dir="bugs1810/500035" title="ataspectj binding 3 -XnoInline">
		<compile options="-1.8 -XnoInline" files="Code3.java"/>
		<run class="Code3">
		<stdout>
		<line text="first: binding target, just passing everything through: target=Foo(1)"/>
		<line text="Executing run(abc) on Foo(i=1)"/>
		<line text="second: binding this and target, just passing everything through: this=Foo(0) target=Foo(1)"/>
		<line text="Executing run(abc) on Foo(i=1)"/>
		<line text="third: binding this, just passing everything through: this=Foo(0)"/>
		<line text="Executing run(abc) on Foo(i=1)"/>
		<line text="fourth: binding this, switching from Foo(0) to Foo(3)"/>
		<line text="Executing run(abc) on Foo(i=1)"/>
		<line text="fifth: binding target, switching from Foo(1) to Foo(4)"/>
		<line text="Executing run(abc) on Foo(i=4)"/>
		<line text="sixth: binding this and target, switching them around (before this=Foo(0) target=Foo(1))"/>
		<line text="Executing run(abc) on Foo(i=0)"/>
		</stdout>
		</run>
	</ajc-test>
	
	<ajc-test dir="bugs1810/500035" title="ataspectj binding 4">
		<compile options="-1.8" files="Code3.java"/>
		<run class="Code3">
		<stdout>
		<line text="first: binding target, just passing everything through: target=Foo(1)"/>
		<line text="Executing run(abc) on Foo(i=1)"/>
		<line text="second: binding this and target, just passing everything through: this=Foo(0) target=Foo(1)"/>
		<line text="Executing run(abc) on Foo(i=1)"/>
		<line text="third: binding this, just passing everything through: this=Foo(0)"/>
		<line text="Executing run(abc) on Foo(i=1)"/>
		<line text="fourth: binding this, switching from Foo(0) to Foo(3)"/>
		<line text="Executing run(abc) on Foo(i=1)"/>
		<line text="fifth: binding target, switching from Foo(1) to Foo(4)"/>
		<line text="Executing run(abc) on Foo(i=4)"/>
		<line text="sixth: binding this and target, switching them around (before this=Foo(0) target=Foo(1))"/>
		<line text="Executing run(abc) on Foo(i=0)"/>
		</stdout>
		</run>
	</ajc-test>
	
	<ajc-test dir="bugs1810/501656" title="generics exception">
		<compile options="-1.8 -parameters" files="ApplicationException.java ApplicationExceptionHandler.java"/>
	</ajc-test>

	<ajc-test dir="bugs1810/490315" title="indy">
		<compile options="-1.8" files="FailingAspect.java SomeAnno.java SomeContext.java SomeCriteria.java SomeDTO.java SomeEnum.java SomePiece.java SomePropertyDTO.java SomeService.java SomeServiceImpl.java"/>
	</ajc-test>

	<ajc-test dir="bugs1810/493554" title="pertarget">
		<compile options="-1.8" files="Dep.java FooAspect.aj Cmd.java"/>
		<run class="example.kusedep.Cmd"></run>
	</ajc-test>

	<ajc-test dir="bugs1810/ambig" title="ambiguous message - 18">
		<compile options="-1.8" files="X.java"/>
	</ajc-test>

	<ajc-test dir="bugs1810/ambig" title="ambiguous message - 17">
		<compile options="-1.7" files="X.java"/>
	</ajc-test>

	<ajc-test dir="bugs1810/502807" title="unexpected aioobe">
		<compile options="-1.8" files="TestCollectors.java">
		  <message kind="error" text="The method toList() in the type Collectors is not applicable for the arguments (Inner::getId)"/>
		</compile>
	</ajc-test>
	
</suite>
