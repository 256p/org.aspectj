<!DOCTYPE suite SYSTEM "../tests/ajcTestSuite.dtd"[]>

<!-- AspectJ v1.5.1 Tests -->
<suite>
    
    <ajc-test dir="bugs151/pr123553" title="generic advice parameters">
        <compile files="A.java" options="-1.5"/>
        <run class="A"/>
    </ajc-test>  
    
     <ajc-test dir="bugs151/pr129566" title="arrayindexoutofbounds">
        <compile files="SkipList.java" options="-1.5"/>
    </ajc-test>  
    
    <ajc-test dir="bugs151" title="member types in generic types">
        <compile files="pr122458.aj" options="-1.5 -emacssym"/>
    </ajc-test>  
    
    <ajc-test dir="bugs151/pr127299" title="missing import gives funny message">
        <compile files="ModelErrorConversion.aj" options="-1.5"/>
    </ajc-test>
      
    <ajc-test dir="bugs151/pr122742" title="@AJ VerifyError with @AfterThrowing and thisJoinPoint argument">
    	<compile files="AfterThrowingTest.java" options="-1.5"/>
    	<run class="AfterThrowingTest">
    	</run>
    </ajc-test>

    <ajc-test dir="bugs151/pr122742" title="@AJ VerifyError with @AfterReturning and thisJoinPoint argument">
    	<compile files="AfterReturningTest.java" options="-1.5"/>
    	<run class="AfterReturningTest">
    	</run>
    </ajc-test>
   
    <ajc-test dir="bugs151/pr120527" title="incorrect unused interface message">
        <compile files="Bugs.aj" options="-warn:unusedPrivate"/>
    </ajc-test>  
    
    <ajc-test dir="bugs151/pr123901" title="inlinevisitor NPE">
        <compile files="A.java,B.java" options="-1.5">
          <message kind="error" line="5" text="a.A cannot be resolved or is not a field"/>
        </compile>
    </ajc-test>
    
    <ajc-test dir="bugs151" title="member types in generic types - 2">
        <compile files="pr122458_2.aj" options="-1.5 -emacssym"/>
        <run class="pr122458_2"/>
    </ajc-test>
    
    <ajc-test dir="bugs151/pr123695" title="Internal nullptr exception with complex declare annotation">
        <compile files="InjectName.java,Main.java,MarkMyMethods.java,MarkMyMethodsAspect.java,NameAspect.java,Named.java,Read.java,Write.java" options="-1.5"/>
    </ajc-test>
    
    <ajc-test dir="bugs151/pr124105" title="hasMember problems with packages">
        <compile files="com/test/IOption.java,com/test/IXOption.java,com/test/IYOption.java,com/test/IZOption.java,com/test/MyBrokenXOption.java,com/test/MyXOption.java,com/test/OptionAspect.aj,com/test/OptionType.java" options="-1.5 -XhasMember">
          <message kind="error" line="4" text="IOption implementations must provide a constructor which accepts an OptionType"/>
        </compile>
    </ajc-test>
    
    <ajc-test dir="bugs151/pr124803" title="generics and different numbers of type variables">
        <compile files="Test.java,TestAspect.java" options="-1.5 -showWeaveInfo">
          <message kind="weave" text="Join point 'method-execution(void Test.foo(java.lang.Number))' in Type 'Test' (Test.java:12) advised by after advice from 'TestAspect' (TestAspect.java:4)"/>
        </compile>
        <run class="Test">
          <stderr>
             <line text="Aspects:execution(void Test.foo(Number))"/>
          </stderr>
        </run>
    </ajc-test>
    
    <ajc-test dir="bugs151/pr124803" title="generics and different numbers of type variables - classes">
        <compile files="Test2.java,TestAspect2.java" options="-1.5 -showWeaveInfo">
          <message kind="weave" text="Join point 'method-execution(void Test2.foo(java.lang.Number))' in Type 'Test2' (Test2.java:12) advised by after advice from 'TestAspect2' (TestAspect2.java:4)"/>
	      <message kind="weave" text="Join point 'method-execution(void Generic1.foo(java.lang.Number))' in Type 'Generic1' (Test2.java:2) advised by after advice from 'TestAspect2' (TestAspect2.java:4) [with runtime test]"/>
        </compile>
        <run class="Test2">
          <stderr>
             <line text="Aspects:execution(void Test2.foo(Number))"/>
          </stderr>
        </run>
    </ajc-test>
    
    <ajc-test dir="bugs151/pr124808" title="parameterized collection fields matched via pointcut">
        <compile files="Test.java,TestAspect.java" options="-1.5"/>
        <run class="Test">
          <stderr>
             <line text="GO Aspects!  get(Set Test.ints)"/>
          </stderr>
        </run>
    </ajc-test>
    
    <ajc-test dir="bugs151" title="calling inherited generic method from around advice">
        <compile files="pr124999.aj" options="-1.5"/>
        <run class="pr124999"/>
    </ajc-test>
    
    <ajc-test dir="bugs151/pr124654" title="generic aspects and annotations">
        <compile files="GenericAnnotation.java,TestSubAspect.java" options="-1.5"/>
        <run class="TestSubAspect">
          <stderr>
            <line text="Reference pointcut advice. interface MyAnnotation"/>
            <line text="Inlined pointcut advice. interface MyAnnotation"/>
            <line text="run running"/>
          </stderr>
        </run>
    </ajc-test>
    
    <ajc-test dir="bugs151" title="incorrectly referencing pointcuts">
        <compile files="pr122452.aj" options="-1.5">
          <message kind="warning" line="2" text="no match for this type name: Point [Xlint:invalidAbsoluteTypeName]"/>
          <message kind="warning" line="3" text="no match for this type name: related.Hello [Xlint:invalidAbsoluteTypeName]"/>
          <message kind="error" line="4" text="Syntax error on token &quot;*&quot;, &quot;(&quot; expected"/>
        </compile>
    </ajc-test>
    
    <ajc-test dir="bugs151" title="incorrectly referencing pointcuts - 2">
        <compile files="pr122452_2.aj" options="-1.5">
          <message kind="error" line="2" text="Syntax error on token &quot;*&quot;, &quot;(&quot; expected"/>
        </compile>
    </ajc-test>
    
    <ajc-test dir="bugs151/pr125080" title="mixing numbers of type parameters">
        <compile files="Test.java" options="-1.5"/>
        <run class="ConcreteAspect"/>
    </ajc-test>
    
    <ajc-test dir="bugs151/pr125080" title="mixing numbers of type parameters - 2">
        <compile files="Test2.java" options="-1.5"/>
        <run class="ConcreteAspect"/>
    </ajc-test>

    <ajc-test dir="bugs151/pr125295" title="new IProgramElement methods">
        <compile files="pkg/C.java,pkg/A.aj" options="-emacssym"/>
    </ajc-test>
    
    <ajc-test dir="bugs151/pr125475" title="define empty pointcut using an annotation">
        <compile files="TestEmptyPointcutAtAspect.java" options="-1.5"/>
    </ajc-test>
    
    <ajc-test dir="bugs151/pr125475" title="define empty pointcut using an annotation - 2">
        <compile files="TestEmptyPointcutAtAspect2.java" options="-1.5 -showWeaveInfo">
          <message kind="warning" line="10" text="advice defined in TestEmptyPointcutAtAspect2 has not been applied [Xlint:adviceDidNotMatch]"/>
        </compile>
    </ajc-test>

    <ajc-test dir="bugs151/pr125475" title="define empty pointcut using aop.xml">
        <compile files="Test.java TestAspect.aj"/>
        <run class="Test" ltw="aop.xml"/>
    </ajc-test>
    
    <ajc-test dir="bugs151/pr128744" title="broken ltw">
        <compile files="Hello.java World.java" options="-1.5" />
        <run class="Hello" ltw="aop.xml">
        	<stdout>
                <line text="Hello"/>
                <line text="World"/>
            </stdout>
        </run>
    </ajc-test>
    
    <ajc-test dir="bugs151/pr125480" title="aop.xml aspect inherits abstract method that has concrete implementation in parent">
        <compile files="HelloWorld.java"/>
        <compile files="AbstractMethods.aj, ConcreteMethods.aj"/>
        <run class="HelloWorld" ltw="aop-tracing.xml"/>
    </ajc-test>
    
    <ajc-test dir="bugs151/pr125699" title="inherit advice with this() and thisJoinPoint">
        <compile files="Tracing.aj, TestTracing.aj, AtTestTracing.java" options="-1.5">
          <message kind="warning" line="13" text="advice defined in Tracing has not been applied [Xlint:adviceDidNotMatch]"/>
          <message kind="warning" line="8" text="advice defined in Tracing has not been applied [Xlint:adviceDidNotMatch]"/>
          <message kind="warning" line="3" text="advice defined in Tracing has not been applied [Xlint:adviceDidNotMatch]"/>
        </compile>
    </ajc-test>

    <ajc-test dir="bugs151/pr125699" title="inherit advice with this() and thisJoinPoint - 2">
        <compile files="Tracing.aj, SubAbstractTracing.aj, SubAtAj.java" options="-1.5">
          <message kind="warning" line="13" text="advice defined in Tracing has not been applied [Xlint:adviceDidNotMatch]"/>
          <message kind="warning" line="8" text="advice defined in Tracing has not been applied [Xlint:adviceDidNotMatch]"/>
          <message kind="warning" line="3" text="advice defined in Tracing has not been applied [Xlint:adviceDidNotMatch]"/>
        </compile>
    </ajc-test>

    <ajc-test dir="bugs151/pr125810" title="warning when inherited pointcut not made concrete">
        <compile files="SuperAspect.aj, SubAspect.aj, SubAtAspect.java" options="-1.5">
          <message kind="error" line="3" text="inherited abstract pointcut SuperAspect.scope() is not made concrete in SubAspect"/>
          <message kind="error" line="1" text="inherited abstract pointcut SuperAspect.scope() is not made concrete in SubAspect"/>
          <message kind="error" line="3" text="inherited abstract pointcut SuperAspect.scope() is not made concrete in SubAtAspect"/>
          <message kind="error" line="4" text="inherited abstract pointcut SuperAspect.scope() is not made concrete in SubAtAspect"/>
        </compile>
    </ajc-test>

    <ajc-test dir="bugs151" title="E extends Enum(E) again">
        <compile files="Pr126316.aj" options="-1.5"/>
    </ajc-test>
    
    <ajc-test dir="bugs151/pr120356" title="@AJ deow appear correctly when structure model is generated">
        <compile files="C.java, A.java" options="-1.5, -emacssym">
         <message kind="error" line="8" text="error"/>
          <message kind="warning" line="5" text="warning"/>
        </compile>
    </ajc-test> 

    <ajc-test dir="bugs151/pr120356" title="@AJ no NPE with deow when structure model isn't generated">
        <compile files="C.java, A.java" options="-1.5">
         <message kind="error" line="8" text="error"/>
          <message kind="warning" line="5" text="warning"/>
        </compile>
    </ajc-test>

    <ajc-test dir="bugs151" title="@AJ without JoinPoint import">
        <compile files="pr121616.java" options="-1.5">
          <message kind="error" line="13" text="JoinPoint cannot be resolved to a type"/>
        </compile>
    </ajc-test>

    <ajc-test dir="bugs151/pr122370" title="@AJ declare parents retains field state">
        <compile files="moody/AnnotationMoodImplementor.java, moody/AnnotationMoodIndicator.java, moody/Mood.java, moody/MainClass.java" options="-1.5"/>
       <run class="moody.MainClass">
            <stdout>
             <line text="ami0's mood is HAPPY"/>
             <line text="ami1's mood is now JOLLY"/>
             <line text="ami0's mood is still HAPPY"/>
            </stdout>
        </run>
    </ajc-test>

    <ajc-test dir="bugs151" title="@AJ no npe with pointcut containing or, this and a wildcard">
        <compile files="pr128237.java" options="-1.5"/>
    </ajc-test>

    <!-- New features down here... when they arent big enough to have their own test file -->
    
    <ajc-test dir="features151/ptw" title="exposing withintype">
        <compile files="ExposedType.java" options="-1.5"/>
        <run class="ExposedType">
          <stderr>
            <line text="here I am execution(void ExposedTypeOne.foo()): for class ExposedTypeOne"/>
            <line text="here I am execution(void ExposedTypeTwo.foo()): for class ExposedTypeTwo"/>
            <line text="here I am execution(void ExposedTypeThree.foo()): for class ExposedTypeThree"/>
          </stderr>
        </run>
    </ajc-test>  
    
    <ajc-test dir="features151/swallowedExceptions" title="swallowed exceptions">
        <compile files="SwallowedException.java">
            <message kind="warning" line="11" text="Exception swallowed in catch block"/>
        </compile>
    </ajc-test>

    <ajc-test dir="features151/swallowedExceptions" title="swallowed exceptions with xlint">
        <compile files="SwallowedException.java" options="-Xlint:ignore">
        </compile>
    </ajc-test>
</suite>