<!DOCTYPE suite SYSTEM "../tests/ajcTestSuite.dtd"[]>

<suite>

    <ajc-test dir="apt" title="annotation processing with specified processor">
        <compile options="-1.8" files="processor/Event.java processor/SimpleProcessor.java"
                 outjar="annotation_processor.jar"/>
        <!--
                SimpleProcessor should generate 2 files for each java class that utilizes @Event annotation:
                    - {className}EventsAspect.aj - this file describes aspect with advices to weaving method annotated with @Event.
                    - {className}Callbacks.java - this file contains callback interfaces for methods annotated with @Event. Example:
                            public final class SomeCallbacks {
                                public interface OnMethod1 {
                                    void changed(Some emmiter);
                                }
                            }
         -->
        <compile options="-1.8 -processor test.SimpleProcessor -s generated -showWeaveInfo" files="src/Some.java"
                 classpath="annotation_processor.jar" outjar="code.jar">
            <message kind="weave"
                     text="Type 'test.Some' (Some.java) has intertyped field from 'test.SomeEventsAspect' (SomeEventsAspect.aj:'test.SomeEventsAspect$SomeOnMethod1Event test.Some.OnMethod1Event')"/>
            <message kind="weave"
                     text="Join point 'method-execution(void test.Some.method1())' in Type 'test.Some' (Some.java:14) advised by before advice from 'test.SomeEventsAspect' (SomeEventsAspect.aj:44)"/>
        </compile>
        <run class="test.Some">
            <stdout>
                <line text="callback registered from before aspect"/>
                <line text="method1 is invoked"/>
            </stdout>
        </run>
    </ajc-test>

    <ajc-test dir="apt" title="annotation processing in action using SPI">
        <!--
        what is SPI is described here - http://docs.oracle.com/javase/tutorial/sound/SPI-intro.html
        -->
        <!--<compile options="-1.8" files="processor/Event.java processor/SimpleProcessor.java" outjar="annotation_processors_with_spi.jar"/>-->
        <compile options="-1.8 -sourceroots processor" inpath="processor/" outjar="annotation_processor.jar"/>
        <!--
                SimpleProcessor should generate 2 files for each java class that utilizes @Event annotation:
                    - {className}EventsAspect.aj - this file describes aspect with advices to weaving method annotated with @Event.
                    - {className}Callbacks.java - this file contains callback interfaces for methods annotated with @Event. Example:
                            public final class SomeCallbacks {
                                public interface OnMethod1 {
                                    void changed(Some emmiter);
                                }
                            }
         -->

        <!--apt_service_description.jar contains only SPI descrition file - META-INF/services/javax.annotation.processing.Processor-->
        <compile options="-1.8 -s generated -showWeaveInfo" files="src/Some.java"
                 classpath="annotation_processor.jar;apt_service_description.jar" outjar="code.jar">
            <message kind="weave"
                     text="Type 'test.Some' (Some.java) has intertyped field from 'test.SomeEventsAspect' (SomeEventsAspect.aj:'test.SomeEventsAspect$SomeOnMethod1Event test.Some.OnMethod1Event')"/>
            <message kind="weave"
                     text="Join point 'method-execution(void test.Some.method1())' in Type 'test.Some' (Some.java:14) advised by before advice from 'test.SomeEventsAspect' (SomeEventsAspect.aj:44)"/>
        </compile>

        <run class="test.Some">
            <stdout>
                <line text="callback registered from before aspect"/>
                <line text="method1 is invoked"/>
            </stdout>
        </run>
    </ajc-test>

    <ajc-test dir="apt" title="disabled annotation processing">
        <compile options="-1.8" files="processor/Event.java processor/SimpleProcessor.java"
                 outjar="annotation_processor.jar"/>
        <!--
                SimpleProcessor should generate 2 files for each java class that utilizes @Event annotation:
                    - {className}EventsAspect.aj - this file describes aspect with advices to weaving method annotated with @Event.
                    - {className}Callbacks.java - this file contains callback interfaces for methods annotated with @Event. Example:
                            public final class SomeCallbacks {
                                public interface OnMethod1 {
                                    void changed(Some emmiter);
                                }
                            }
         -->

        <compile options="-1.8 -s generated -showWeaveInfo -proc:none" files="src/Some.java"
                 classpath="annotation_processor.jar" outjar="code.jar">
            <!--field was not injected, so error should occur-->
            <message kind="error" text="OnMethod1Event cannot be resolved or is not a field"/>
        </compile>
    </ajc-test>

</suite>
