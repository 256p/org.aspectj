<!DOCTYPE suite SYSTEM "../tests/ajcTestSuite.dtd"[]>

<!-- AspectJ v1.6.0 Tests -->
<suite>

   <ajc-test dir="bugs154/pr176991" title="wrong number of type parameters">
     <compile options="-1.5" files="AspectJBugTestCase.java"/>
   </ajc-test>
   
   <ajc-test dir="bugs154/pr167197" title="generic type parameterized with array type">
     <compile options="-1.5" files="AspectBreaker.java"/>
   </ajc-test>
   
   
   <ajc-test dir="bugs154/pr203646" title="npe with itd on inner generic interface">
     <compile options="-1.5" files="Bang.java"/>
     <!--compile options="-1.5 -emacssym" files="Bang.java"/-->
   </ajc-test>
   
   <ajc-test dir="bugs154/pr203646" title="npe with itd on inner generic interface - emacssym">
     <compile options="-1.5 -emacssym" files="Bang.java"/>
   </ajc-test>
   
   <ajc-test dir="bugs154/pr203646" title="npe with itd on inner generic interface - exampleA">
     <compile options="-1.5" files="ExampleA.java"/>
     <run class="ExampleA"/>
   </ajc-test>
   
   <ajc-test dir="bugs154/pr203646" title="npe with itd on inner generic interface - exampleB">
     <compile options="-1.5" files="ExampleB.java">
       <message kind="error" line="20" text="The method intro(String) in the type I.J&lt;String&gt; is not applicable for the arguments (int)"/>
     </compile>
   </ajc-test>
   
   <ajc-test dir="bugs154/pr203646" title="npe with itd on inner generic interface - exampleC">
     <compile options="-1.5" files="ExampleC.java"/>
     <run class="ExampleC"/>
   </ajc-test>
   
   <ajc-test dir="bugs154/pr203646" title="npe with itd on inner generic interface - exampleD">
     <compile options="-1.5" files="ExampleD.java"/>
     <run class="ExampleD"/>
   </ajc-test>
   
   <ajc-test dir="bugs154/pr203646" title="npe with itd on inner generic interface - exampleE">
     <compile options="-1.5" files="ExampleE.java"/>
     <run class="ExampleE"/>
   </ajc-test>
   
   <ajc-test dir="bugs154/pr203646" title="npe with itd on inner generic interface - exampleF">
     <compile options="-1.5" files="ExampleF.java"/>
     <run class="ExampleF"/>
   </ajc-test>
   
   <ajc-test dir="bugs154/pr203646" title="npe with itd on inner generic interface - exampleG">
     <compile options="-1.5" files="ExampleG.java"/>
   </ajc-test>
   
   <ajc-test dir="bugs154/pr206732" title="itd clash for types from aspectpath">
     <compile outjar="foo.jar" files="Advised.aj"/>
     <compile files="Ref.aj" aspectpath="foo.jar"/>
   </ajc-test>

   <ajc-test dir="bugs154/pr175806" title="coping with bad tables">
     <compile options="-1.5" files="A.java"/>
   </ajc-test>
   
   <ajc-test dir="bugs154/pr174449" title="problem with generic aspect and generic pointcut">
     <compile options="-1.5" files="Foo.java"/>
     <run class="Foo">
       <stderr>
         <line text="around advice executing: servant class is class Boo"/>
         <line text="around advice executing: servant class is class Goo"/>
       </stderr>
     </run>
   </ajc-test>
   
   <ajc-test dir="bugs154/pr174449" title="problem with generic aspect and generic pointcut - noinline">
     <compile options="-1.5 -XnoInline" files="Foo.java"/>
     <run class="Foo">
       <stderr>
         <line text="around advice executing: servant class is class Boo"/>
         <line text="around advice executing: servant class is class Goo"/>
       </stderr>
     </run>
   </ajc-test>
   
   <ajc-test dir="bugs154/pr171953_2" title="problem with generic methods and ordering - ok">
	 <compile options="-1.5" files="test/ListFactoryAspect.aj, test/AbstractProcessor.java,test/ListFactory.java,test/ListFactoryConsumer.java,test/Processor.java,test/SimpleListFactoryConsumer.java">
	 </compile>
   </ajc-test>
   
   <ajc-test dir="bugs154/pr171953_2" title="problem with generic methods and ordering - bad">
	 <compile options="-1.5" files="test/ListFactory.java,test/ListFactoryConsumer.java,test/SimpleListFactoryConsumer.java,test/Processor.java,test/ListFactoryAspect.aj,test/AbstractProcessor.java">
	 </compile>
   </ajc-test>

   <ajc-test dir="bugs154/pr171953" title="problem with itd and join point signature collection - bad">
     <compile options="-1.5 -showWeaveInfo" files="test/AbstractExecutable.java,test/AnotherExecutable.java,test/Executable.java,test/ExecutionAspect.aj,test/SecondTestExecutable.java test/SubTestExecutable.java test/TestExecutable.java">
       <message kind="weave" text="Join point 'method-execution(void test.SecondTestExecutable.execute())' in Type 'test.SecondTestExecutable' (SecondTestExecutable.java:5) advised by around advice from 'test.ExecutionAspect' (ExecutionAspect.aj:9)"/>
       <message kind="weave" text="Extending interface set for type 'test.AbstractExecutable' (AbstractExecutable.java) to include 'java.io.Serializable' (ExecutionAspect.aj)"/>
       <message kind="weave" text="Join point 'method-execution(void test.SubTestExecutable.execute())' in Type 'test.SubTestExecutable' (SubTestExecutable.java:6) advised by around advice from 'test.ExecutionAspect' (ExecutionAspect.aj:9)"/>
       <message kind="weave" text="Join point 'method-execution(void test.TestExecutable.execute())' in Type 'test.TestExecutable' (TestExecutable.java:5) advised by around advice from 'test.ExecutionAspect' (ExecutionAspect.aj:9)"/>
     </compile>       
     <run class="test.SecondTestExecutable"/>
   </ajc-test>

   <ajc-test dir="bugs154/pr171953" title="problem with itd and join point signature collection - ok">
     <compile options="-1.5 -showWeaveInfo" files="test/SecondTestExecutable.java test/AbstractExecutable.java test/AnotherExecutable.java  test/Executable.java test/ExecutionAspect.aj test/RunnableAspect.aj test/SubTestExecutable.java test/TestExecutable.java">
       <message kind="weave" text="Join point 'method-execution(void test.SecondTestExecutable.execute())' in Type 'test.SecondTestExecutable' (SecondTestExecutable.java:5) advised by around advice from 'test.ExecutionAspect' (ExecutionAspect.aj:9)"/>
       <message kind="weave" text="Extending interface set for type 'test.AbstractExecutable' (AbstractExecutable.java) to include 'java.io.Serializable' (ExecutionAspect.aj)"/>
       <message kind="weave" text="Join point 'method-execution(void test.SubTestExecutable.execute())' in Type 'test.SubTestExecutable' (SubTestExecutable.java:6) advised by around advice from 'test.ExecutionAspect' (ExecutionAspect.aj:9)"/>
       <message kind="weave" text="Join point 'method-execution(void test.TestExecutable.execute())' in Type 'test.TestExecutable' (TestExecutable.java:5) advised by around advice from 'test.ExecutionAspect' (ExecutionAspect.aj:9)"/>
     </compile>       
     <run class="test.SecondTestExecutable"/>
   </ajc-test>

    <ajc-test dir="bugs154/pr171952" title="generic methods and ITDs">
      <compile files="Foo.java,FooAspect.java" options="-1.5"/>
    </ajc-test>
    
    <ajc-test dir="bugs154/pr169428" title="using decp annotation without aspect annotation">
      <compile files="AnAspect.java" options="-1.5">
        <message kind="error" text="Found @AspectJ annotations in a non @Aspect type 'AnAspect'"/>
      </compile>
    </ajc-test>
    
    <ajc-test dir="bugs154/pr170467" title="itds and parameterized parameters">
      <compile files="Bug.aj" options="-1.5"/>
      <compile files="Bug2.aj" options="-1.5"/>
    </ajc-test>
    
    <ajc-test dir="bugs154/pr169706" title="inherited annotations">
      <compile files="A.java,B.java,C.java,MyAspect.java,MyAnnotation.java,Test.java" options="-1.5 -showWeaveInfo">
        <message kind="weave" text="Join point 'method-call(void C.foo())' in Type 'Test' (Test.java:5) advised by before advice from 'MyAspect' (MyAspect.java:4)"/>
	  </compile>
    </ajc-test>
    
    <ajc-test dir="bugs154/pr165885" title="generic field npe">
      <compile files="Concrete.java,Abstract.java,Aspect.java" options="-1.5">
        <message kind="warning" line="8" text="foo"/>
	  </compile>
    </ajc-test>
    
    <ajc-test dir="bugs154/pr168044" title="complex generics - 1">
      <compile files="AbstractNode.java" options="-1.5">
	  </compile>
    </ajc-test>
    
    <ajc-test dir="bugs154/pr168063" title="incorrectly marking field transient">
      <compile files="A.java"/>
      <run class="A">
        <stdout>
          <line text="It worked, data preserved!"/>
        </stdout>
      </run>
    </ajc-test>
    
    <ajc-test dir="bugs154/pr166084" title="incorrect optimization of istore">
      <compile files="X.java" inpath="simple.jar"/>
	  <run class="Simple"/>
    </ajc-test>
       
    <ajc-test dir="bugs154/pr165631" title="dual parameterizations not allowed">
      <!-- two variations of the same situation, should fail in the same way -->
      <compile files="Bug.java" options="-1.5">
        <message kind="error" line="12" text="Cannot declare parent B"/>
      </compile>
      <compile files="Bug2.java" options="-1.5">
        <message kind="error" line="13" text="Cannot declare parent B"/>
      </compile>
    </ajc-test>

    <ajc-test dir="ltw"
      title="Suppress warnings1"
      keywords="xlint, ltw, nowarn, pr166238">
        <compile
            files="Main.java"
        >
        </compile>    
        <run class="Main" ltw="aop-noxlintfile-nowarn.xml">
            <stderr/> <!-- no warnings from missing xlint file: they are suppressed -->
        </run>        
    </ajc-test>

    <ajc-test dir="ltw"
      title="Suppress warnings2"
      keywords="xlint, ltw, nowarn, pr166238">
        <compile
            files="Main.java"
        >
        </compile>    
        <run class="Main" ltw="aop-noxlintfile-warnnone.xml">
            <stderr/> <!-- no warnings from missing xlint file: they are suppressed -->
        </run>
    </ajc-test>
    
    <ajc-test dir="bugs154/pr172107" title="null returned from getField()"
		keywords="pr172107">
        <compile files="ReadWriteAJBug172107.java,Instrumentation.aj"/>
		<run class="ReadWriteAJBug172107"/>
    </ajc-test>
    
    <ajc-test dir="bugs154/pr197719" title="annotation style syntax and cross package extension">
      <compile files="test/aspects/C1.java,test/aspects/C3.java,test/aspects/MyAnn.java,test/aspects/MyAnnAspect.java,test/aspects2/C2.java" options="-1.5"/>
      <run class="test.aspects2.C2"/>
    </ajc-test>
    
    <ajc-test dir="bugs154/pr205907" title="new pointcut designators in a reference pointcut">
      <compile files="Test.aj"/>
    </ajc-test>

</suite>