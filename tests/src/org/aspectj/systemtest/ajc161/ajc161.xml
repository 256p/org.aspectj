<!DOCTYPE suite SYSTEM "../tests/ajcTestSuite.dtd"[]>

<!-- AspectJ v1.6.1 Tests -->
<suite>

	<ajc-test dir="bugs161/pr199130" title="complex bounds on generic aspect - 1">
    	<compile files="Simple.java" options="-1.5"/>
    	<run class="Simple">
    	</run>
    </ajc-test>
    
	<ajc-test dir="bugs161/pr199130" title="complex bounds on generic aspect - 2">
    	<compile files="Complex.java" options="-1.5"/>
    	<run class="Complex">
    	</run>
    </ajc-test>
    
	<ajc-test dir="bugs161/pr226201" title="generic aspect around advice">
    	<compile files="IntAspTest.java" options="-1.5"/>
    	<run class="IntAspTest">
    	</run>
    </ajc-test>
    

	<ajc-test dir="bugs161/pr235829" title="crazy generics and inner types">
    	<compile files="Main.java a/Adapter.java a/b/Adapter.java" options="-1.5"/>
    	<run class="Main"/>
    </ajc-test>
    

    <ajc-test dir="bugs161/pr235597" title="annotation exposure and generics">
        <compile files="AnnotationTest1.java SomeAnnotation.java SomeAspect.java" options="-1.5"/>
        <run class="AnnotationTest1">
          <stdout>
            <line text="@someAspect annotation parameter (call)"/>
            <line text="@someAspect annotation no parameter"/>
            <line text="@someAspect method name"/>
            <line text="@someAspect annotation parameter (execution)"/>
            <line text="test 1"/>
            <line text="@someAspect annotation parameter (call)"/>
            <line text="@someAspect annotation no parameter"/>
            <line text="@someAspect method name"/>
            <line text="@someAspect annotation parameter (execution)"/>
            <line text="test 2"/>
            <line text="@someAspect annotation parameter (call)"/>
            <line text="@someAspect annotation no parameter"/>
            <line text="@someAspect method name"/>
            <line text="@someAspect annotation parameter (execution)"/>
            <line text="test 3"/>
          </stdout>
        </run>
    </ajc-test>
    

    <ajc-test dir="bugs161/pr235204" title="incorrect call relationship">
        <compile files="RecursiveCatcher.java" options="-1.5 -emacssym"/>
    </ajc-test>
    
    <ajc-test dir="bugs161/pr233838" title="itd precedence - 1">
        <compile files="Z.java" options="-1.5"/>
        <run class="Z">
          <stdout>
            <line text="X.test()"/>
          </stdout>
        </run>
    </ajc-test>

    <ajc-test dir="bugs161/pr233838" title="itd precedence - 2">
        <compile files="Z2.java" options="-1.5"/>
        <run class="Z2">
          <stdout>
            <line text="Y.test()"/>
          </stdout>
        </run>
    </ajc-test>
    

    <ajc-test dir="bugs161/pr227401" title="getfield problem with generics">
        <compile files="Instrumentation.java Fails.java" options="-1.5"/>
        <run class="Fails">
          <stdout>
            <line text="getField(* protS)  getField()='protected java.lang.String Fails$A.protS'  getDeclaringType()='class Fails$A'"/>
            <line text="getField(* prot)  getField()='protected int Fails$A.prot'  getDeclaringType()='class Fails$A'"/>
            <line text="22"/>
            <line text="getField(* defS)  getField()='java.lang.String Fails$A.defS'  getDeclaringType()='class Fails$A'"/>
            <line text="getField(* def)  getField()='int Fails$A.def'  getDeclaringType()='class Fails$A'"/>
            <line text="11"/>
            <line text="getField(* defS)  getField()='java.lang.String Fails$A.defS'  getDeclaringType()='class Fails$A'"/>
            <line text="getField(* def)  getField()='int Fails$A.def'  getDeclaringType()='class Fails$A'"/>
            <line text="22"/>
          </stdout>
        </run>
    </ajc-test> 
    
    <ajc-test dir="bugs161/pr231478" title="generic abstract aspects">
        <compile files="Base.java Sub.java AbstractComponent.java AbstractWindow.java" options="-1.5"/>
    </ajc-test>

    <ajc-test dir="bugs161/pr227993" title="field jp anno value">
        <compile files="FieldJP.java" options="-1.5"/>
        <run class="FieldJP">
          <stderr>
            <line text="get of YES field"/>
            <line text="fone=0"/>
            <line text="get of NO field"/>
            <line text="ftwo=0"/>
            <line text="fthr=0"/>
            <line text="set of YES field"/>
            <line text="set of NO field"/>
          </stderr>
        </run>
    </ajc-test> 

    <ajc-test dir="bugs161/pr231187x" title="generics bounds decp">
        <compile files="Cement.java ConcreteClass.java SuperClass.java SuperClassAspect.aj WetCement.java Main.java" options="-1.5"/>
        <run class="concrete.Main">
          <stdout>
            <line text="ran!"/>
          </stdout>
        </run>
    </ajc-test> 
    
    <ajc-test dir="bugs161/pr231187x" title="generics bounds decp - 2">
        <compile files="Cement.java ConcreteClass.java SuperClass.java WetCement.java" options="-1.5">
          <message kind="error" text="The type WetCement is not a valid substitute for the bounded parameter"/>
        </compile>
    </ajc-test> 
    
    <ajc-test dir="bugs161/pr230134" title="ltw inherited cflow">
      <compile files="HW.java"/>
      <compile files="SimpleTracing.java Tracing.java HelloWorldTracing.java" outjar="foo.jar"/>
      <run class="hello.HW" classpath="$sandbox/foo.jar" ltw="aop.xml">
        <stdout>
          <line text="Hello World"/>
 	    </stdout>
      </run>
    </ajc-test>
    
    <ajc-test dir="bugs161/pr229910" title="around advice on field set">
        <compile files="Test.java" options="-1.5"/>
        <run class="Test"/>
    </ajc-test> 
    
    <ajc-test dir="bugs161/pr226567" title="pipeline compilation and generic return type">
        <compile files="BarAspect.aj Foo.java Bar.java" options="-1.5"/>
        <compile files="BarAspect.aj Bar.java Foo.java" options="-1.5"/>
    </ajc-test> 

</suite>